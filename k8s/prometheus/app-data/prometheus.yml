global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  - rules.yml

alerting:
  alertmanagers:
    - kubernetes_sd_configs:
        - role: endpoints
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_service_name
          action: keep
          regex: default;prometheus-alertmanager

scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets:
          - localhost:9090

  - job_name: 'kubelet'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  - job_name: 'cadvisor'
    kubernetes_sd_configs:
      - role: node
    metrics_path: /metrics/cadvisor
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  - job_name: 'node'
    kubernetes_sd_configs:
      - role: endpoints
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name
        action: keep
        regex: default;prometheus-node-exporter;http

  - job_name: 'pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_pod_container_port_name
        regex: metrics
        action: keep
      - source_labels:
          - __meta_kubernetes_pod_container_name
        target_label: job

  - job_name: 'k8s-apiserver'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
          - __meta_kubernetes_endpoint_port_name
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kube-state-metrics'
    kubernetes_sd_configs:
      - role: endpoints
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
        action: keep
        regex: default;kube-state-metrics

  - job_name: 'k8s-service-endpoints'
    kubernetes_sd_configs:
      - role: endpoints
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels:
          - __meta_kubernetes_namespace
          - __meta_kubernetes_service_name
        regex: default;kubernetes
        action: drop
      - source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape
        regex: 'true'
        action: keep
      - source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
        regex: (.+)
        target_label: __metrics_path__
        action: replace
      - source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
        regex: ([^:]+)(?::\d+)?;(\d+)
        target_label: __address__
        replacement: $1:$2
        action: replace
      - source_labels:
          - __meta_kubernetes_service_name
        separator: ;
        regex: (.*)
        target_label: kubernetes_name
        replacement: $1
        action: replace
